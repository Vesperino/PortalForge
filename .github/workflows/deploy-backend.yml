name: Deploy Backend

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Backend to VPS
    runs-on: [self-hosted, vps, production]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from secrets
        run: |
          mkdir -p ~/portalforge/backend
          cat > ~/portalforge/backend/.env << EOF
          ASPNETCORE_ENVIRONMENT=Production
          ASPNETCORE_URLS=http://0.0.0.0:5000
          ConnectionStrings__DefaultConnection=${{ secrets.DB_CONNECTION_STRING }}
          Supabase__Url=${{ secrets.SUPABASE_URL }}
          Supabase__ServiceRoleKey=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          Supabase__JwtSecret=${{ secrets.SUPABASE_JWT_SECRET }}
          Serilog__MinimumLevel__Default=Information
          Serilog__MinimumLevel__Override__Microsoft=Warning
          Serilog__MinimumLevel__Override__System=Warning
          EOF
          echo "✅ .env file created"

      - name: Stop existing container
        run: docker stop portalforge-backend || true

      - name: Remove existing container
        run: docker rm portalforge-backend || true

      - name: Build Docker image
        run: |
          cd backend
          docker build -t portalforge-backend:latest .

      - name: Run Docker container
        run: |
          docker run -d \
            --name portalforge-backend \
            --restart unless-stopped \
            -p 22022:5000 \
            --env-file ~/portalforge/backend/.env \
            portalforge-backend:latest

      - name: Clean up old images
        run: docker image prune -f

      - name: Check container status
        run: |
          sleep 5
          docker ps | grep portalforge-backend
          echo "✅ Backend container running!"

      - name: Health check
        run: |
          echo "Waiting for backend to start..."
          sleep 10
          curl -f http://localhost:22022/portalforge/be/health || exit 1
          echo "✅ Backend health check passed!"
