name: Deploy Frontend

on:
  push:
    branches: [main]
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Frontend to VPS
    runs-on: [self-hosted, vps, production]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Build static site
        run: |
          cd frontend
          npm run build
        env:
          NUXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NUXT_PUBLIC_SUPABASE_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          NUXT_PUBLIC_API_URL: https://krablab.pl/portalforge/be

      - name: Deploy static files to Nginx
        run: |
          sudo mkdir -p /var/www/portalforge-frontend
          sudo rsync -av --delete frontend/.output/public/ /var/www/portalforge-frontend/
          sudo chown -R www-data:www-data /var/www/portalforge-frontend
          echo "‚úÖ Static files deployed!"

      - name: Update Nginx configuration
        run: |
          set -e  # Exit on any error

          NGINX_CONF="/etc/nginx/sites-available/krablab.pl"
          BACKUP_CONF="/etc/nginx/sites-available/krablab.pl.backup.$(date +%Y%m%d_%H%M%S)"
          TEMP_CONF="/tmp/krablab.pl.new"

          echo "üìã Creating backup: $BACKUP_CONF"
          sudo cp "$NGINX_CONF" "$BACKUP_CONF"

          echo "üîß Updating PortalForge frontend configuration..."

          # Remove old PortalForge frontend section if exists
          sudo awk '
            /# ===== PORTALFORGE FRONTEND/ {
              skip=1
              next
            }
            /# ===== Krablab main web/ {
              if (skip) {
                skip=0
                print ""
              }
            }
            !skip { print }
          ' "$NGINX_CONF" > "$TEMP_CONF"

          # Insert new frontend config before Krablab main web section
          sudo awk '
            /# ===== Krablab main web/ {
              while ((getline line < ".deployment/nginx/portalforge-frontend.conf") > 0) {
                print line
              }
              print ""
            }
            { print }
          ' "$TEMP_CONF" | sudo tee "${TEMP_CONF}.final" > /dev/null

          sudo mv "${TEMP_CONF}.final" "$NGINX_CONF"
          sudo rm -f "$TEMP_CONF"

          echo "‚úÖ Configuration updated!"

      - name: Test Nginx configuration
        run: |
          if sudo nginx -t; then
            echo "‚úÖ Nginx configuration is valid!"
          else
            echo "‚ùå Nginx configuration test failed! Rolling back..."
            LATEST_BACKUP=$(ls -t /etc/nginx/sites-available/krablab.pl.backup.* | head -1)
            sudo cp "$LATEST_BACKUP" /etc/nginx/sites-available/krablab.pl
            echo "‚è™ Rolled back to: $LATEST_BACKUP"
            exit 1
          fi

      - name: Reload Nginx
        run: |
          sudo systemctl reload nginx
          echo "‚úÖ Nginx reloaded successfully!"

      - name: Verify deployment
        run: |
          echo "Waiting for Nginx to process new config..."
          sleep 3

          # Test if frontend is accessible
          if curl -f -s -o /dev/null -w "%{http_code}" https://krablab.pl/portalforge/fe/ | grep -q "200"; then
            echo "‚úÖ Frontend is accessible!"
          else
            echo "‚ö†Ô∏è  Frontend returned non-200 status code, check manually"
          fi
